[{"C:\\Users\\anton\\web-projects\\runner apps\\racesimulator\\frontend\\src\\index.js":"1","C:\\Users\\anton\\web-projects\\runner apps\\racesimulator\\frontend\\src\\reportWebVitals.js":"2","C:\\Users\\anton\\web-projects\\runner apps\\racesimulator\\frontend\\src\\App.js":"3","C:\\Users\\anton\\web-projects\\runner apps\\racesimulator\\frontend\\src\\store.js":"4","C:\\Users\\anton\\web-projects\\runner apps\\racesimulator\\frontend\\src\\components\\Header.js":"5","C:\\Users\\anton\\web-projects\\runner apps\\racesimulator\\frontend\\src\\components\\Footer.js":"6","C:\\Users\\anton\\web-projects\\runner apps\\racesimulator\\frontend\\src\\screens\\RaceParameterScreen.js":"7","C:\\Users\\anton\\web-projects\\runner apps\\racesimulator\\frontend\\src\\screens\\StartListScreen.js":"8","C:\\Users\\anton\\web-projects\\runner apps\\racesimulator\\frontend\\src\\screens\\RaceListScreen.js":"9","C:\\Users\\anton\\web-projects\\runner apps\\racesimulator\\frontend\\src\\screens\\EntryParameterScreen.js":"10","C:\\Users\\anton\\web-projects\\runner apps\\racesimulator\\frontend\\src\\screens\\LoginScreen.js":"11","C:\\Users\\anton\\web-projects\\runner apps\\racesimulator\\frontend\\src\\screens\\ResultListScreen.js":"12","C:\\Users\\anton\\web-projects\\runner apps\\racesimulator\\frontend\\src\\reducers\\simulatorReducers.js":"13","C:\\Users\\anton\\web-projects\\runner apps\\racesimulator\\frontend\\src\\components\\Message.js":"14","C:\\Users\\anton\\web-projects\\runner apps\\racesimulator\\frontend\\src\\components\\InfoBox.js":"15","C:\\Users\\anton\\web-projects\\runner apps\\racesimulator\\frontend\\src\\components\\Loader.js":"16","C:\\Users\\anton\\web-projects\\runner apps\\racesimulator\\frontend\\src\\components\\FormContainer.js":"17","C:\\Users\\anton\\web-projects\\runner apps\\racesimulator\\frontend\\src\\components\\SplitTimes.js":"18","C:\\Users\\anton\\web-projects\\runner apps\\racesimulator\\frontend\\src\\constants\\simulatorConstants.js":"19","C:\\Users\\anton\\web-projects\\runner apps\\racesimulator\\frontend\\src\\actions\\simulatorActions.js":"20","C:\\Users\\anton\\web-projects\\runner apps\\racesimulator\\frontend\\src\\components\\SplitTimesRow.js":"21"},{"size":615,"mtime":1609254688319,"results":"22","hashOfConfig":"23"},{"size":375,"mtime":1609254688320,"results":"24","hashOfConfig":"23"},{"size":1209,"mtime":1612463570357,"results":"25","hashOfConfig":"23"},{"size":1126,"mtime":1613323838590,"results":"26","hashOfConfig":"23"},{"size":404,"mtime":1610296761521,"results":"27","hashOfConfig":"23"},{"size":432,"mtime":1609254688316,"results":"28","hashOfConfig":"23"},{"size":5965,"mtime":1612463570443,"results":"29","hashOfConfig":"23"},{"size":3039,"mtime":1611159978138,"results":"30","hashOfConfig":"23"},{"size":1647,"mtime":1612463570433,"results":"31","hashOfConfig":"23"},{"size":3361,"mtime":1612463570413,"results":"32","hashOfConfig":"23"},{"size":2233,"mtime":1612463570426,"results":"33","hashOfConfig":"23"},{"size":3433,"mtime":1613918231644,"results":"34","hashOfConfig":"23"},{"size":3256,"mtime":1613917513205,"results":"35","hashOfConfig":"23"},{"size":254,"mtime":1610296761524,"results":"36","hashOfConfig":"23"},{"size":714,"mtime":1612884401444,"results":"37","hashOfConfig":"23"},{"size":352,"mtime":1610296761523,"results":"38","hashOfConfig":"23"},{"size":397,"mtime":1610296761510,"results":"39","hashOfConfig":"23"},{"size":1339,"mtime":1612463534179,"results":"40","hashOfConfig":"23"},{"size":1326,"mtime":1613323838573,"results":"41","hashOfConfig":"23"},{"size":7837,"mtime":1613916662107,"results":"42","hashOfConfig":"23"},{"size":967,"mtime":1611943752623,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"163gyr8",{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"46"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},"C:\\Users\\anton\\web-projects\\runner apps\\racesimulator\\frontend\\src\\index.js",[],["89","90"],"C:\\Users\\anton\\web-projects\\runner apps\\racesimulator\\frontend\\src\\reportWebVitals.js",[],"C:\\Users\\anton\\web-projects\\runner apps\\racesimulator\\frontend\\src\\App.js",[],"C:\\Users\\anton\\web-projects\\runner apps\\racesimulator\\frontend\\src\\store.js",[],"C:\\Users\\anton\\web-projects\\runner apps\\racesimulator\\frontend\\src\\components\\Header.js",[],"C:\\Users\\anton\\web-projects\\runner apps\\racesimulator\\frontend\\src\\components\\Footer.js",[],"C:\\Users\\anton\\web-projects\\runner apps\\racesimulator\\frontend\\src\\screens\\RaceParameterScreen.js",[],"C:\\Users\\anton\\web-projects\\runner apps\\racesimulator\\frontend\\src\\screens\\StartListScreen.js",[],"C:\\Users\\anton\\web-projects\\runner apps\\racesimulator\\frontend\\src\\screens\\RaceListScreen.js",[],"C:\\Users\\anton\\web-projects\\runner apps\\racesimulator\\frontend\\src\\screens\\EntryParameterScreen.js",[],"C:\\Users\\anton\\web-projects\\runner apps\\racesimulator\\frontend\\src\\screens\\LoginScreen.js",[],"C:\\Users\\anton\\web-projects\\runner apps\\racesimulator\\frontend\\src\\screens\\ResultListScreen.js",[],"C:\\Users\\anton\\web-projects\\runner apps\\racesimulator\\frontend\\src\\reducers\\simulatorReducers.js",[],"C:\\Users\\anton\\web-projects\\runner apps\\racesimulator\\frontend\\src\\components\\Message.js",[],"C:\\Users\\anton\\web-projects\\runner apps\\racesimulator\\frontend\\src\\components\\InfoBox.js",[],"C:\\Users\\anton\\web-projects\\runner apps\\racesimulator\\frontend\\src\\components\\Loader.js",[],"C:\\Users\\anton\\web-projects\\runner apps\\racesimulator\\frontend\\src\\components\\FormContainer.js",[],"C:\\Users\\anton\\web-projects\\runner apps\\racesimulator\\frontend\\src\\components\\SplitTimes.js",[],"C:\\Users\\anton\\web-projects\\runner apps\\racesimulator\\frontend\\src\\constants\\simulatorConstants.js",[],"C:\\Users\\anton\\web-projects\\runner apps\\racesimulator\\frontend\\src\\actions\\simulatorActions.js",["91"],"import axios from 'axios';\r\nimport {\r\n\tRACE_LIST_REQUEST,\r\n\tRACE_LIST_SUCCESS,\r\n\tRACE_LIST_FAIL,\r\n\tSINGLE_RACE_REQUEST,\r\n\tSINGLE_RACE_SUCCESS,\r\n\tSINGLE_RACE_FAIL,\r\n\tCREATE_STARTLIST_REQUEST,\r\n\tCREATE_STARTLIST_SUCCESS,\r\n\tCREATE_STARTLIST_FAIL,\r\n\tCREATE_RESULTINFO_REQUEST,\r\n\tCREATE_RESULTINFO_SUCCESS,\r\n\tCREATE_RESULTINFO_FAIL,\r\n\tLOGIN_REQUEST,\r\n\tLOGIN_SUCCESS,\r\n\tLOGIN_FAIL,\r\n\tLOGOUT,\r\n\tSAVE_RESULT_REQUEST,\r\n\tSAVE_RESULT_SUCCESS,\r\n\tSAVE_RESULT_FAIL,\r\n} from '../constants/simulatorConstants';\r\n\r\nexport const listRaces = () => async (dispatch) => {\r\n\ttry {\r\n\t\tdispatch({ type: RACE_LIST_REQUEST });\r\n\r\n\t\tconst { data } = await axios.get(`/api/v1/race-list`);\r\n\r\n\t\tdispatch({\r\n\t\t\ttype: RACE_LIST_SUCCESS,\r\n\t\t\tpayload: data,\r\n\t\t});\r\n\t} catch (error) {\r\n\t\tdispatch({\r\n\t\t\ttype: RACE_LIST_FAIL,\r\n\t\t\tpayload:\r\n\t\t\t\terror.response && error.response.data.message\r\n\t\t\t\t\t? error.response.data.message\r\n\t\t\t\t\t: error.message,\r\n\t\t});\r\n\t}\r\n};\r\n\r\nexport const getSingleRaceInfo = (id) => async (dispatch) => {\r\n\ttry {\r\n\t\tdispatch({ type: SINGLE_RACE_REQUEST });\r\n\r\n\t\tconst { data } = await axios.get(`/api/v1/race-list/${id}`);\r\n\r\n\t\tdispatch({\r\n\t\t\ttype: SINGLE_RACE_SUCCESS,\r\n\t\t\tpayload: data.race,\r\n\t\t});\r\n\t} catch (error) {\r\n\t\tdispatch({\r\n\t\t\ttype: SINGLE_RACE_FAIL,\r\n\t\t\tpayload:\r\n\t\t\t\terror.response && error.response.data.message\r\n\t\t\t\t\t? error.response.data.message\r\n\t\t\t\t\t: error.message,\r\n\t\t});\r\n\t}\r\n};\r\n\r\nconst calculateStartTime = (minKmTimeSec, maxKmTimeSec, distance) => {\r\n\tlet startTime =\r\n\t\t(minKmTimeSec + Math.random() * (maxKmTimeSec - minKmTimeSec)) *\r\n\t\tdistance;\r\n\treturn startTime;\r\n};\r\n\r\nconst generateStartlist = (\r\n\traceEntries,\r\n\tminKmTimeSec,\r\n\tmaxKmTimeSec,\r\n\tdistance,\r\n\traceName\r\n) => {\r\n\tconst startInfo = raceEntries.map((raceEntry) => {\r\n\t\tlet startTime = calculateStartTime(\r\n\t\t\tminKmTimeSec,\r\n\t\t\tmaxKmTimeSec,\r\n\t\t\tdistance\r\n\t\t);\r\n\t\treturn {\r\n\t\t\tstartTime,\r\n\t\t\t_id: raceEntry._id,\r\n\t\t\trunnerName: raceEntry.name,\r\n\t\t\tstartNumber: raceEntry.startNumber,\r\n\t\t};\r\n\t});\r\n\r\n\tconst sortedStartlist = startInfo.sort((a, b) => {\r\n\t\treturn a.startTime - b.startTime;\r\n\t});\r\n\r\n\tconst info = {\r\n\t\tdistance,\r\n\t\traceName,\r\n\t\tstartList: sortedStartlist,\r\n\t};\r\n\treturn info;\r\n};\r\n\r\nexport const createStartlist = (id, minKmTimeSec, maxKmTimeSec) => async (\r\n\tdispatch\r\n) => {\r\n\ttry {\r\n\t\tdispatch({ type: CREATE_STARTLIST_REQUEST });\r\n\r\n\t\tconst raceResult = await axios.get(`/api/v1/race-list/${id}`);\r\n\r\n\t\tconst race = raceResult.data.race;\r\n\t\tconst distance = race.distance;\r\n\t\tconst raceName = race.name;\r\n\r\n\t\tconst { data } = await axios.get(\r\n\t\t\t`/api/v1/race-list/${id}/race-entries?limit=100`\r\n\t\t);\r\n\r\n\t\tconst raceEntries = data.raceEntries;\r\n\r\n\t\tconst startListInfo = generateStartlist(\r\n\t\t\traceEntries,\r\n\t\t\tminKmTimeSec,\r\n\t\t\tmaxKmTimeSec,\r\n\t\t\tdistance,\r\n\t\t\traceName\r\n\t\t);\r\n\r\n\t\tdispatch({\r\n\t\t\ttype: CREATE_STARTLIST_SUCCESS,\r\n\t\t\tpayload: startListInfo,\r\n\t\t});\r\n\r\n\t\tsessionStorage.setItem('startlist', JSON.stringify(startListInfo));\r\n\t} catch (error) {\r\n\t\tdispatch({\r\n\t\t\ttype: CREATE_STARTLIST_FAIL,\r\n\t\t\tpayload:\r\n\t\t\t\terror.response && error.response.data.message\r\n\t\t\t\t\t? error.response.data.message\r\n\t\t\t\t\t: error.message,\r\n\t\t});\r\n\t}\r\n};\r\n\r\nconst minusOrPlus = () => {\r\n\tconst number = Math.random();\r\n\tif (number > 0.5) {\r\n\t\treturn 1;\r\n\t} else {\r\n\t\treturn -1;\r\n\t}\r\n};\r\n\r\nconst calculateResultTime = (startTime, raceParams, distance) => {\r\n\tconst kilometers = [...Array(distance).keys()];\r\n\tconst {\r\n\t\tminSplitSec,\r\n\t\tmaxSplitSec,\r\n\t\tvariationSec,\r\n\t\tinitialVariationSec,\r\n\t} = raceParams;\r\n\tlet previousSplit = 0;\r\n\tlet kmTime = 0;\r\n\tlet totalTime = 0;\r\n\tlet previousTotalTime = 0;\r\n\tlet raceVariation = 0;\r\n\tconst splitsKm = kilometers.map((km) => {\r\n\t\tlet sign = minusOrPlus();\r\n\t\tif (km === 0) {\r\n\t\t\traceVariation = sign * initialVariationSec * Math.random();\r\n\t\t\tkmTime = startTime / distance + raceVariation;\r\n\t\t\t// check min and max\r\n\t\t\tif (kmTime < minSplitSec) {\r\n\t\t\t\traceVariation =\r\n\t\t\t\t\t(initialVariationSec - (minSplitSec - kmTime)) *\r\n\t\t\t\t\tMath.random();\r\n\t\t\t\tkmTime = startTime / distance + raceVariation;\r\n\t\t\t} else if (kmTime > maxSplitSec) {\r\n\t\t\t\traceVariation =\r\n\t\t\t\t\t-(initialVariationSec - (kmTime - maxSplitSec)) *\r\n\t\t\t\t\tMath.random();\r\n\t\t\t\tkmTime = startTime / distance + raceVariation;\r\n\t\t\t}\r\n\t\t\tpreviousSplit = kmTime;\r\n\t\t\ttotalTime = kmTime;\r\n\t\t\tpreviousTotalTime = totalTime;\r\n\t\t} else {\r\n\t\t\tkmTime = previousSplit + sign * variationSec * Math.random();\r\n\t\t\t// check min and max\r\n\t\t\tif (kmTime <= minSplitSec) {\r\n\t\t\t\traceVariation =\r\n\t\t\t\t\t(variationSec - (minSplitSec - kmTime)) * Math.random();\r\n\t\t\t\tkmTime = previousSplit + raceVariation;\r\n\t\t\t} else if (kmTime >= maxSplitSec) {\r\n\t\t\t\traceVariation =\r\n\t\t\t\t\t-(variationSec - (kmTime - maxSplitSec)) * Math.random();\r\n\t\t\t\tkmTime = previousSplit + raceVariation;\r\n\t\t\t}\r\n\t\t\tpreviousSplit = kmTime;\r\n\t\t\ttotalTime = previousTotalTime + kmTime;\r\n\t\t\tpreviousTotalTime = totalTime;\r\n\t\t}\r\n\t\treturn { kmTime, totalTime };\r\n\t});\r\n\treturn splitsKm;\r\n};\r\n\r\nconst generateResultlist = (startList, raceName, distance, raceParams) => {\r\n\tconst resultInfo = startList.map((entryInfo) => {\r\n\t\tconst { startTime, runnerName, _id } = entryInfo;\r\n\t\tlet allTimes = calculateResultTime(startTime, raceParams, distance);\r\n\t\treturn {\r\n\t\t\tallTimes,\r\n\t\t\trunnerName,\r\n\t\t\t_id,\r\n\t\t\ttotalTime: allTimes[distance - 1].totalTime,\r\n\t\t};\r\n\t});\r\n\r\n\tconst sortedResultlist = resultInfo.sort((a, b) => {\r\n\t\treturn a.totalTime - b.totalTime;\r\n\t});\r\n\r\n\tconst info = {\r\n\t\tdistance,\r\n\t\traceName,\r\n\t\tresultList: sortedResultlist,\r\n\t};\r\n\treturn info;\r\n};\r\n\r\nexport const createResultlist = (startListInfo, raceParams) => async (\r\n\tdispatch\r\n) => {\r\n\ttry {\r\n\t\tdispatch({ type: CREATE_RESULTINFO_REQUEST });\r\n\r\n\t\tconst { raceName, distance, startList } = startListInfo;\r\n\r\n\t\tconst resultListInfo = generateResultlist(\r\n\t\t\tstartList,\r\n\t\t\traceName,\r\n\t\t\tdistance,\r\n\t\t\traceParams\r\n\t\t);\r\n\r\n\t\tdispatch({\r\n\t\t\ttype: CREATE_RESULTINFO_SUCCESS,\r\n\t\t\tpayload: resultListInfo,\r\n\t\t});\r\n\t} catch (error) {\r\n\t\tdispatch({\r\n\t\t\ttype: CREATE_RESULTINFO_FAIL,\r\n\t\t\tpayload:\r\n\t\t\t\terror.response && error.response.data.message\r\n\t\t\t\t\t? error.response.data.message\r\n\t\t\t\t\t: error.message,\r\n\t\t});\r\n\t}\r\n};\r\n\r\nexport const login = (email, password) => async (dispatch) => {\r\n\ttry {\r\n\t\tdispatch({ type: LOGIN_REQUEST });\r\n\r\n\t\tconst config = {\r\n\t\t\theaders: {\r\n\t\t\t\t'Content.Type': 'application/json',\r\n\t\t\t},\r\n\t\t};\r\n\r\n\t\tconst { data } = await axios.post(\r\n\t\t\t'/api/v1/users/login',\r\n\t\t\t{ email, password },\r\n\t\t\tconfig\r\n\t\t);\r\n\r\n\t\tdispatch({\r\n\t\t\ttype: LOGIN_SUCCESS,\r\n\t\t\tpayload: data,\r\n\t\t});\r\n\r\n\t\tsessionStorage.setItem('userInfo', JSON.stringify(data));\r\n\t} catch (error) {\r\n\t\tdispatch({\r\n\t\t\ttype: LOGIN_FAIL,\r\n\t\t\tpayload:\r\n\t\t\t\terror.response && error.response.data.message\r\n\t\t\t\t\t? error.response.data.message\r\n\t\t\t\t\t: error.message,\r\n\t\t});\r\n\t}\r\n};\r\n\r\nexport const logout = () => (dispatch) => {\r\n\tlocalStorage.removeItem('userInfo');\r\n\tdispatch({ type: LOGOUT });\r\n};\r\n\r\nexport const saveResult = (raceId, resultListInfo) => async (\r\n\tdispatch,\r\n\tgetState\r\n) => {\r\n\ttry {\r\n\t\tdispatch({ type: SAVE_RESULT_REQUEST });\r\n\r\n\t\t/*\r\n\t\tconst config = {\r\n\t\t\theaders: {\r\n\t\t\t\t'Content.Type': 'application/json',\r\n\t\t\t},\r\n\t\t};\r\n\r\n\t\tconst { data } = await axios.post(\r\n\t\t\t'/api/v1/race-result',\r\n\t\t\t{ raceId, resultListInfo },\r\n\t\t\tconfig\r\n\t\t); \r\n\t\t*/\r\n\r\n\t\t// get token from state\r\n\t\tconst {\r\n\t\t\tuserLogin: { userInfo },\r\n\t\t} = getState();\r\n\r\n\t\tconst config = {\r\n\t\t\theaders: {\r\n\t\t\t\t'Content-Type': 'application/json',\r\n\t\t\t\tAuthorization: `Bearer ${userInfo.token}`,\r\n\t\t\t},\r\n\t\t};\r\n\r\n\t\tconst { data } = await axios.post(\r\n\t\t\t'/api/v1/race-result',\r\n\t\t\t{ raceId, resultListInfo },\r\n\t\t\tconfig\r\n\t\t);\r\n\r\n\t\tdispatch({\r\n\t\t\ttype: SAVE_RESULT_SUCCESS,\r\n\t\t});\r\n\t} catch (error) {\r\n\t\tdispatch({\r\n\t\t\ttype: SAVE_RESULT_FAIL,\r\n\t\t\tpayload:\r\n\t\t\t\terror.response && error.response.data.message\r\n\t\t\t\t\t? error.response.data.message\r\n\t\t\t\t\t: error.message,\r\n\t\t});\r\n\t}\r\n};\r\n","C:\\Users\\anton\\web-projects\\runner apps\\racesimulator\\frontend\\src\\components\\SplitTimesRow.js",[],["92","93"],{"ruleId":"94","replacedBy":"95"},{"ruleId":"96","replacedBy":"97"},{"ruleId":"98","severity":1,"message":"99","line":337,"column":11,"nodeType":"100","messageId":"101","endLine":337,"endColumn":15},{"ruleId":"94","replacedBy":"102"},{"ruleId":"96","replacedBy":"103"},"no-native-reassign",["104"],"no-negated-in-lhs",["105"],"no-unused-vars","'data' is assigned a value but never used.","Identifier","unusedVar",["104"],["105"],"no-global-assign","no-unsafe-negation"]